<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[李天炜]]></title>
  <link href="http://tianweili.github.io/atom.xml" rel="self"/>
  <link href="http://tianweili.github.io/"/>
  <updated>2015-01-13T11:20:11+08:00</updated>
  <id>http://tianweili.github.io/</id>
  <author>
    <name><![CDATA[李天炜 litianwei2013[AT]gmail.com]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Octopress博客的个性化配置]]></title>
    <link href="http://tianweili.github.io/blog/2015/01/11/setup-octopress-blog/"/>
    <updated>2015-01-11T21:52:49+08:00</updated>
    <id>http://tianweili.github.io/blog/2015/01/11/setup-octopress-blog</id>
    <content type="html"><![CDATA[<p>本文主要讲述了对Octopress搭建的博客进行一些个性化的配置，主要包括以下几个方面：</p>

<ul>
<li>优化提高博客的访问速度</li>
<li>设置链接在新窗口打开</li>
<li>配置首页文章以摘要形式展示</li>
<li>代码着色</li>
<li>添加侧边栏文章分类</li>
<li>添加多说评论系统</li>
<li>自动为图片添加URL前缀</li>
</ul>


<!--more-->


<p>原文链接：<a href="http://tianweili.github.com/blog/2015/01/11/setup-octopress-blog/">http://tianweili.github.com/blog/2015/01/11/setup-octopress-blog/</a></p>

<h2>提高博客访问速度</h2>

<p>因为“墙”的关系，所以Octopress建立以后会发现访问速度奇慢无比，竟然超过了40s。</p>

<p><img src="http://7u2i08.com1.z0.glb.clouddn.com/setup-octopress-blog/call-octopress-blog-slowly.png"></p>

<p>仔细分析后我们发现其中都是一些被墙的请求报了404Error，所以导致访问博客巨慢无比，下面我们就一次阉割掉这些被墙的请求。T_T</p>

<p><strong>1.替换Google JS公共库</strong></p>

<p>Octopress默认使用的是Google的JS公共库地址，加载的过程无比的缓慢。因此我们要把它改为<a href="http://developer.baidu.com/wiki/index.php?title=docs/cplat/libs">百度的JS公共库</a>，需要把<code>/source/_includes/head.html</code>文件中的Google公共库地址改为：</p>

<pre><code>&lt;script src="//libs.baidu.com/jquery/1.7.2/jquery.min.js"&gt;&lt;/script&gt;
</code></pre>

<p><strong>2.去掉Twitter</strong></p>

<p>从上图可以看出加载失败的还有twitter，这个也得给去掉。</p>

<p>把在根目录下的<code>_config.yml</code>文件中Twitter内容给注释掉。</p>

<pre><code># Twitter
#twitter_user:
#twitter_tweet_button: true
</code></pre>

<p>把<code>\source\_includes\after_footer.html</code>文件中的twitter内容给注释掉：</p>

<pre><code>&lt;!--{% include twitter_sharing.html %}--&gt;
</code></pre>

<p><strong>3.删除Google font</strong></p>

<p>把在<code>\source\_includes\custom\head.html</code>中的Google font样式给删除：</p>

<pre><code>&lt;link href="//fonts.googleapis.com/css?family=PT+Serif:regular,italic,bold,bolditalic" rel="stylesheet" type="text/css"&gt;
&lt;link href="//fonts.googleapis.com/css?family=PT+Sans:regular,italic,bold,bolditalic" rel="stylesheet" type="text/css"&gt;
</code></pre>

<h2>设置链接在新窗口打开</h2>

<p>在博文中，如果点击链接直接在本窗口打开了，那么用户体验就不是很好。而markdown的标准语法是不支持链接在新窗口打开的，虽然可以通过在markdown中直接写html标签来解决这个问题，但是这与markdown的简洁书写特性不符。但是我们可以通过设置Octopress来达到这种效果，即在<code>\source\_includes\custom\head.html</code>文件中添加如下一段代码：</p>

<pre><code>&lt;script&gt;
    function addBlankTargetForLinks () {
      $('a[href^="http"]').each(function(){
          $(this).attr('target', '_blank');
      });
    }

    $(document).bind('DOMNodeInserted', function(event) {
      addBlankTargetForLinks();
    });
&lt;/script&gt;
</code></pre>

<h2>首页文章以摘要形式展示</h2>

<p>1.在文章对应的markdown文件中，在需要显示在首页的文字后面添加<code>&lt;!--more--&gt;</code>，执行rake generate后在首页上会看到只显示&lt;!—more—>前面的文字，文字后面会显示<code>Read on</code>链接，点击后进入文字的详细页面;</p>

<p>2.如果想将Read on修改为中文，可以修改_config.yml文件</p>

<pre><code>#excerpt_link: "Read on &amp;rarr;"  # "Continue reading" link text at the bottom of excerpted articles
excerpt_link: "阅读全文&amp;rarr;"  # "Continue reading" link text at the bottom of excerpted articles
</code></pre>

<h2>代码着色</h2>

<p>Octopress使用的是Pygments来进行代码着色的，使用方式也比较简单如下所示：</p>

<pre><code>```java xxx.java
//java code
```
</code></pre>

<p><a href="http://pygments.org/languages/">Pygments支持的语言列表</a></p>

<p>有时候Octopress会把我们想要展示的Ruby代码解析成HTML，如果只是想展示代码，而不让Octopress来解析，那么可以在代码前后加入和代码。</p>

<h2>添加侧边栏文章分类（category）</h2>

<p>1.在<code>plugins</code>目录下创建<code>category_list_tag.rb</code>文件，内容如下：</p>

<pre><code>module Jekyll 
  class CategoryListTag &lt; Liquid::Tag 
    def render(context) 
      html = "" 
      categories = context.registers[:site].categories.keys 
      categories.sort.each do |category| 
        posts_in_category = context.registers[:site].categories[category].size 
        category_dir = context.registers[:site].config['category_dir'] 
        category_url = File.join(category_dir, category.gsub(/_|\P{Word}/, '-').gsub(/-{2,}/, '-').downcase) 
        html &lt;&lt; "&lt;li class='category'&gt;&lt;a href='http://tianweili.github.io/#{category_url}/'&gt;#{category} (#{posts_in_category})&lt;/a&gt;&lt;/li&gt;\n" 
      end 
      html 
    end 
  end 
end

Liquid::Template.register_tag('category_list', Jekyll::CategoryListTag)
</code></pre>

<p>2.添加<code>source/_includes/asides/category_list.html</code>文件，内容如下：</p>

<pre><code>&lt;section&gt;
  &lt;h1&gt;文章分类&lt;/h1&gt;
  &lt;ul id="categories"&gt;
    {% category_list %}
  &lt;/ul&gt;
&lt;/section&gt;
</code></pre>

<p>3.修改<code>_config.yml</code>文件，在<code>default_asides</code>项中添加<code>asides/category_list.html</code>，值之间以逗号隔开，值的先后顺序代表了侧边栏展现的先后顺序。</p>

<pre><code>default_asides: [asides/category_list.html, asides/recent_posts.html, asides/github.html, asides/delicious.html, asides/pinboard.html, asides/googleplus.html]
</code></pre>

<p>在侧边栏还可以添加其他组件，如微博、标签云等，添加方式和上面类似。</p>

<h2>添加多说评论</h2>

<p>Octopress默认自带了DISQUS，但是对于国内不是很好用。所以在经过考虑之后选择了国内比较流行的多说评论系统。
首先要去<a href="http://duoshuo.com/">多说网站注册</a>，获取站点的<code>short_name</code>。</p>

<p>在<code>_config.yml</code>中添加</p>

<pre><code># duoshuo comments
duoshuo_comments: true
duoshuo_short_name: yourname
</code></pre>

<p>在<code>./source/_layouts/post.html</code>中的<code>disqus</code>代码</p>

<p>下方添加多说评论模块：</p>

<pre><code>{% if site.duoshuo_short_name and site.duoshuo_comments == true and page.comments == true %}
  &lt;section&gt;
    &lt;h1&gt;Comments&lt;/h1&gt;
    &lt;div id="comments" aria-live="polite"&gt;{% include post/duoshuo.html %}&lt;/div&gt;
  &lt;/section&gt;
{% endif %}
</code></pre>

<p>如果你希望一些单独的页面下方也放置评论功能，那么在<code>./source/_layouts/page.html</code>中也做如上修改。
然后创建一个<code>./source/_includes/post/duoshuo.html</code>文件，内容如下：</p>

<pre><code>&lt;!-- Duoshuo Comment BEGIN --&gt;
&lt;div class="ds-thread" data-title="Octopress博客的个性化配置"&gt;&lt;/div&gt;
&lt;script type="text/javascript"&gt;
  var duoshuoQuery = {short_name:"tianweili"};
  (function() {
    var ds = document.createElement('script');
    ds.type = 'text/javascript';ds.async = true;
    ds.src = 'http://static.duoshuo.com/embed.js';
    ds.charset = 'UTF-8';
    (document.getElementsByTagName('head')[0] 
    || document.getElementsByTagName('body')[0]).appendChild(ds);
  })();
&lt;/script&gt;
&lt;!-- Duoshuo Comment END --&gt;
</code></pre>

<p>最后再修改<code>_includes/article.html</code>文件，在</p>

<p>下方添加下面代码：</p>

<pre><code>{% if site.duoshuo_short_name and page.comments != false and post.comments != false and site.duoshuo_comments == true %}
      | &lt;a href="{% if index %}{{ root_url }}{{ post.url }}{% endif %}#comments"&gt;Comments&lt;/a&gt;
{% endif %}
</code></pre>

<h2>自动为图片添加url前缀</h2>

<p>我把图片资源都<a href="https://portal.qiniu.com/">放在了七牛云存储</a>上，写博客时候就是用七牛的外链。但是这样有几个问题：</p>

<ul>
<li>每次写博客插入图片外链地址时候都很麻烦，需要给每张图片都添加七牛外链地址url前缀；</li>
<li>如果以后更换了存储，那就麻烦了，需要依次编辑替换每个图片的url前缀</li>
</ul>


<p>现在我们就使用一种灵活的方式来配置并自动生成图片的URL前缀：</p>

<p>首先修改<code>/plugins/image_tag.rb</code>文件，在<code>@img['class'].gsub!(/"/, '') if @img['class']</code>后添加下面一行代码：</p>

<figure class='code'><figcaption><span>./plugins/image_tag.rb</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="vi">@img</span><span class="o">[</span><span class="s1">&#39;src&#39;</span><span class="o">]</span> <span class="o">=</span> <span class="no">Jekyll</span><span class="o">.</span><span class="n">configuration</span><span class="p">({})</span><span class="o">[</span><span class="s1">&#39;static_file_prefix&#39;</span><span class="o">]</span> <span class="o">+</span> <span class="vi">@img</span><span class="o">[</span><span class="s1">&#39;src&#39;</span><span class="o">]</span> <span class="k">if</span> <span class="vi">@img</span><span class="o">[</span><span class="s1">&#39;src&#39;</span><span class="o">][</span><span class="mi">0</span><span class="o">]</span> <span class="o">==</span> <span class="s1">&#39;/&#39;</span>
</span></code></pre></td></tr></table></div></figure>


<p>然后再修改根目录下的<code>_config.yml</code>文件，添加如下配置：</p>

<pre><code># Add url prefix for image automatically
static_file_prefix: http://7u2i08.com1.z0.glb.clouddn.com
</code></pre>

<p>最后我们在插入图片的时候要记住不能再使用Markdown语法来写了，要<a href="http://octopress.org/docs/plugins/image-tag/">使用Ocotpress自定义的IMG标签来插入图片</a>。</p>

<p>本地预览先generate后preview，这样一来插入图片就灵活方便多了。</p>

<p>作者：<a href="http://tianweili.github.com/">李天炜</a></p>

<p>原文链接：<a href="http://tianweili.github.com/blog/2015/01/11/setup-octopress-blog/">http://tianweili.github.com/blog/2015/01/11/setup-octopress-blog/</a></p>

<p>转载请注明作者和文章出处，谢谢。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[windows下搭建Octopress博客]]></title>
    <link href="http://tianweili.github.io/blog/2015/01/11/create-octopress-blog-in-windows/"/>
    <updated>2015-01-11T21:43:31+08:00</updated>
    <id>http://tianweili.github.io/blog/2015/01/11/create-octopress-blog-in-windows</id>
    <content type="html"><![CDATA[<!--more-->


<p>原文链接：<a href="http://tianweili.github.com/blog/2015/01/11/create-octopress-blog-in-windows/">http://tianweili.github.com/blog/2015/01/11/create-octopress-blog-in-windows/</a></p>

<h2>将博客发布到GitHub</h2>

<p>进入博客源代码所在目录。编辑markdown后</p>

<ol>
<li>执行<code>rake new_post['my first blog']</code>来生成一篇博文；</li>
<li>执行<code>rake generate</code>生成博客网页；</li>
<li>执行<code>rake preview</code>后在本地输入&lt;localhost:4000>来预览博客；</li>
<li>执行<code>rake setup_github_pages</code>命令后，按照提示输入对应的GitHub的repository地址：<code>git@github.com:TianweiLi/tianweili.github.com.git</code>；（不执行这一步会可能会报<code>No such file or directory - _deploy</code>错误）</li>
<li>执行<code>rake deploy</code>将博客站点发布到GitHub<code>master</code>分支上，这样就可以访问博客了（这一步就是把public目录下文件push到master分支上）；</li>
<li>将修改后的octopress源码push到GitHub的<code>source</code>分支上：</li>
</ol>


<p>依次执行下面命令</p>

<pre><code>git add .
git commit -m 'build octopress blog'
git push origin source
</code></pre>

<h2>换一台电脑写博客</h2>

<p>如果需要在另一台电脑写博客并提交上去，那么可以采用下面步骤来实现。</p>

<p>先要找到GitHub的repository url，然后clone source分支到本地：</p>

<pre><code>git clone -b source git@github.com:TianweiLi/tianweili.github.com.git octopress
</code></pre>

<p>然后clone master分支到本地：</p>

<pre><code>cd octopress
git clone git@github.com:TianweiLi/tianweili.github.com.git _deploy
</code></pre>

<p>然后进行一些相关依赖的安装，依次执行下面命令：</p>

<pre><code>gem install bundler
bundle install
rake install
rake setup_github_pages
</code></pre>

<p>作者：<a href="http://tianweili.github.com/">李天炜</a></p>

<p>原文链接：<a href="http://tianweili.github.com/blog/2015/01/11/create-octopress-blog-in-windows/">http://tianweili.github.com/blog/2015/01/11/create-octopress-blog-in-windows/</a></p>

<p>转载请注明作者和文章出处，谢谢。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[第一篇博文]]></title>
    <link href="http://tianweili.github.io/blog/2015/01/10/my-first-blog/"/>
    <updated>2015-01-10T01:28:08+08:00</updated>
    <id>http://tianweili.github.io/blog/2015/01/10/my-first-blog</id>
    <content type="html"><![CDATA[<p>新的一年，又一个新的博客！</p>

<p>IT干了几年，博客社区也换了几次。至今没有遇到特别中意的社区，<a href="http://www.cnblogs.com/hellojava/">最近一次用得比较久的博客就是博客园了</a>，在博客园写博客给我的感觉相对是比较好的，但是仍然不能让我满意。于是我动起了自己搭建博客的念头，多方搜索比较下选择使用<a href="http://octopress.org/">Octopress</a>+<a href="https://pages.github.com/">GitHub Pages</a>来搭建自己的个人博客。</p>

<!--more-->


<p>原文链接：<a href="http://tianweili.github.io/blog/2015/01/10/my-first-blog/">http://tianweili.github.io/blog/2015/01/10/my-first-blog/</a></p>

<h2>为什么不再使用博客园写博客</h2>

<p><strong>1.博客园氛围以.NET技术社区为主</strong></p>

<p>当然其他语言技术的博客也有，但几乎.NET要占去了一半甚至更多。这对于我一个做Java，做Python，做Perl……却唯独没做.NET的人来说略微有些显得“格格不入”——上面其他语言技术的博客太少了，尤其是高质量的更少！</p>

<p>这样带来的后果就是与你“志同道合”能够互相讨论学习的人比较少，当然如果你主要是做.NET的那还是值得你考虑加入的。</p>

<p><strong>2.能进行个性化定制的项目有点少</strong></p>

<p>不过坦白来说，博客园至少是主流几个技术社区能够进行个性化定制最多的技术博客社区了，否则我也不会最后用这一个以.NET为主的技术社区。</p>

<p>但是我仍然觉得还不够，而且有诸多限制，很多想要的功能加不上，很多不想要的功能硬是塞给你，又去除不掉。</p>

<p><strong>3.在上面写博客有诸多不爽</strong></p>

<p>首先是写博客比较麻烦，各种调样式，而我又是对排版格式等有点追求的人，（但是我不是处女座，:)。）所以最后导致我写一篇博客花在调样式上面的时间比较多，而且很不方便。</p>

<p>其次是代码样式格式着色都不是很喜欢，虽然我自己用CSS改了一下，但仍然觉得很丑。</p>

<p><strong>4.上面高质量的博客很少</strong></p>

<p>感觉现在首页上质量较高的博客变得越来越少了，非.NET的更少，待下去也没什么意义。所以，我走了……</p>

<p><strong>5.博客风格样式不好看</strong></p>

<p>风格样式不好看，自己能修改的地方又不多。我本人是喜欢比较简洁一点的风格，写个博客嘛，不至于那么多花花绿绿的，所以我一进入一些特别花哨的博客就看得眼花缭乱，哈哈。</p>

<p>So，只有自己建个博客来折腾咯。</p>

<p>最后，不过我仍然很感谢<a href="http://www.cnblogs.com/hellojava/">在博客园的那一段时光</a>，在博客园写博客的那一段日子也让自己进不了不少。（虽然还有很多的博文都存放在草稿里没有发布出来，那就让它继续躺在草稿箱里吧，-_-）至少博客园的博客部分是我所见过几个主流社区里最好的，只是感觉还不太适合自己而已。</p>

<h2>为什么选择Octopress来写博客</h2>

<p>基本上博客园的诸多不爽在这里都得到了解决，-_-!</p>

<p><strong>1.可以由自己随意定制</strong></p>

<p>当然也少不了折腾，查资料，配置，各种排查错误等等等的，也耗费了不少的时间和精力，并且由于国外被墙的缘故，还要删掉很多请求来进行优化访问速度。但是仍然感觉很爽，学习新知识，排查解决BUG后的成就感也挺大的。</p>

<p><strong>2.博客风格样式都比较喜欢</strong></p>

<p>我一直比较喜欢简洁素朴一些的博客风格。既然是博客，就让人注意到文章的内容，而不是被吸引到博客的皮肤和各种特效上。而且自己搭建的博客风格可以随意修改定制。</p>

<p>而且Octopress<a href="http://pygments.org/">使用Pygments来进行代码着色</a>，代码风格样式也是自己比较喜欢的，比如：</p>

<figure class='code'><figcaption><span>Sample.java</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="kn">package</span> <span class="n">com</span><span class="o">.</span><span class="na">ltw</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'><span class="kd">public</span> <span class="kd">class</span> <span class="nc">Sample</span><span class="o">{</span>
</span><span class='line'>  <span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="n">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">){</span>
</span><span class='line'>      <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">&quot;Hello world!&quot;</span><span class="o">);</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>并且Octopress搭建的博客无论是在PC端还是移动端，它的页面兼容性都比较好哦。</p>

<p><strong>3.写博客比较爽</strong></p>

<p>Octopress用的是Markdown来写博客，这正合自己的心意。用<a href="http://wowubuntu.com/markdown/">Markdown语法</a>写起来比较快，使用文本格式编写和存储，简洁轻便，还可以很方便得进行本地预览。</p>

<p>并且文章的发布也很方便，<code>generate</code>后一条命令就<code>deploy</code>到GitHub上去了。</p>

<p><strong>4.搭建过程比较折腾人</strong></p>

<p>因为Octopress使用Ruby来写的，并且用到了Python的Pygments插件，还用到了Git来进行版本管理，使用GitHub Pages服务，博客和源代码提交到了GitHub来存储，图片又使用的七牛云存储，评论使用的多说评论系统，博客各方面的修改和个性化改动，还有被墙的缘故要进行访问优化等等。</p>

<p>总之博客搭建过程中会遇到各种问题，滋味那叫一个酸爽。当然也有人一次成功，那即使运气了。不过遇到问题，解决问题也学到了不少东西。后面我会把一部分博客配置和遇到各种问题的解决方式写成博客记录和分享。</p>

<h2>最后</h2>

<p>新的一年，开通了新的博客！迎来了一个好的开端。接下来我就使用这个博客来记录和分享自己的学习和生活经历吧！</p>

<hr />

<p>作者：<a href="http://tianweili.github.com/">李天炜</a></p>

<p>原文链接：<a href="http://tianweili.github.io/blog/2015/01/10/my-first-blog/">http://tianweili.github.io/blog/2015/01/10/my-first-blog/</a></p>

<p>转载请注明作者和文章出处，谢谢。</p>
]]></content>
  </entry>
  
</feed>
