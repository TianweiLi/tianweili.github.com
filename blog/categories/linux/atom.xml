<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Linux | 李天炜]]></title>
  <link href="http://tianweili.github.io/blog/categories/linux/atom.xml" rel="self"/>
  <link href="http://tianweili.github.io/"/>
  <updated>2015-02-25T22:26:45+08:00</updated>
  <id>http://tianweili.github.io/</id>
  <author>
    <name><![CDATA[李天炜 litianwei2013[AT]gmail.com]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Linux中的awk命令]]></title>
    <link href="http://tianweili.github.io/blog/2015/02/24/linux-awk/"/>
    <updated>2015-02-24T10:33:41+08:00</updated>
    <id>http://tianweili.github.io/blog/2015/02/24/linux-awk</id>
    <content type="html"><![CDATA[<p>本文主要介绍了Linux中的awk命令的一些知识以及如何使用awk编程。不同于grep的查找、sed的编辑等命令，awk命令在文本处理和生成报告等地方是经常用到的一个强大命令。</p>

<!--more-->


<p>原文链接：<a href="http://tianweili.github.io/blog/2015/02/24/linux-awk/">http://tianweili.github.io/blog/2015/02/24/linux-awk/</a></p>

<h2>简介</h2>

<p>awk命令主要用于文本分析。它的处理方式是读入文本，将每行记录以一定的分隔符（默认为空格）分割成不同的域，然后对不同的域进行各种处理与输出。</p>

<h2>命令格式</h2>

<p>awk命令的一个基本格式如下：</p>

<pre><code class="bash">awk '{pattern + action}' {filenames}
</code></pre>

<p>无论awk命令简单还是复杂，基本的格式如上所示。其中引号为必须，引号内代表一个awk程序。大括号非必须，括起来用于根据特定的模式对一系列指令进行分组。pattern是在数据中查找内容，支持正则匹配。action对查找出来的记录执行相应的处理，比如打印和输出等。</p>

<h2>awk三种调用方式</h2>

<h3>命令行方式</h3>

<pre><code class="bash">awk [-F 'field-separator'] 'commands' input-file(s)
</code></pre>

<p>其中的<code>-F</code>指令是可选的，后面跟着指定的域分隔符，比如tab键等（默认是空格）。后面的<code>commands</code>是真正的awk命令。<code>input-file(s)</code>代表输入的一个或多个文件</p>

<p>命令行调用方式是最经常使用的一种方式，也是本文所讲的重点。</p>

<h3>shell脚本方式</h3>

<p>把平时所写的shell脚本的首行<code>#!/bin/sh</code>换成<code>#!/bin/awk</code>。把所有的awk命令插入脚本中，通过调用脚本来执行awk命令。</p>

<h3>插入文件调用</h3>

<p>把所有的awk命令插入单独的文件中，然后通过以下命令调用awk：</p>

<pre><code class="bash">awk -f awk-script-file input-file(s)
</code></pre>

<p>其中<code>-f</code>指定了要调用的包含awk命令的文件。</p>

<h2>awk应用示例</h2>

<h3>打印指定字段</h3>

<p>打印当前目录下所有的文件名和文件大小列表，以tab键分割：</p>

<pre><code class="bash">ls -lh | awk 'print $9"\t"$4'
</code></pre>

<p>$0变量是指当前一行记录，$1是指第一个域数据，$2指第二个域数据……以此类推。</p>

<h3>print与printf</h3>

<p>awk提供了print与printf两种打印输出的函数。</p>

<p>print的参数可以是变量、数值和字符串。参数用逗号分割，字符串必须用双引号引用。</p>

<p>printf与C语言中的printf函数类似，可以用来格式化字符串。</p>

<pre><code class="bash">awk -F ':' '{printf("filename:%10s,linenumber:%s,columns:%s,linecontent:%s\n",FILENAME,NR,NF,$0)}' /etc/passwd
</code></pre>

<h3>根据指定分隔符切割域</h3>

<pre><code class="bash">ll | awk -F '\t' 'print $9'
</code></pre>

<h3>BEGIN&hellip;END</h3>

<pre><code class="bash">cat /etc/passwd | awk  -F ':'  'BEGIN {print "name,shell"}  {print $1","$7} END {print "blue,/bin/nosh"}'
</code></pre>

<h3>pattern正则搜索</h3>

<pre><code class="bash">awk -F: '/root/{print $7}' /etc/passwd
</code></pre>

<h2>awk内置变量</h2>

<p>awk有许多内置变量用来设置环境变量信息，这些变量都可以被改变。常用的内置变量和作用如下所示：</p>

<pre><code class="bash">ARGC               命令行参数个数
ARGV               命令行参数排列
ENVIRON            支持队列中系统环境变量的使用
FILENAME           awk浏览的文件名
FNR                浏览文件的记录数
FS                 设置输入域分隔符，等价于命令行 -F选项
NF                 浏览记录的域的个数
NR                 已读的记录数
OFS                输出域分隔符
ORS                输出记录分隔符
RS                 指定用来切片的分隔符
</code></pre>

<h2>awk编程</h2>

<h3>定义变量</h3>

<h3>条件语句</h3>

<h3>循环语句</h3>

<h3>数组</h3>

<p>参考：<a href="http://www.cnblogs.com/ggjucheng/archive/2013/01/13/2858470.html">http://www.cnblogs.com/ggjucheng/archive/2013/01/13/2858470.html</a></p>

<p>作者：<a href="http://tianweili.github.com/">李天炜</a></p>

<p>原文链接：<a href="http://tianweili.github.io/blog/2015/02/24/linux-awk/">http://tianweili.github.io/blog/2015/02/24/linux-awk/</a></p>

<p>转载请注明作者及出处，谢谢。</p>
]]></content>
  </entry>
  
</feed>
